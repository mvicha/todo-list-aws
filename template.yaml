AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  todo-list-aws

  todo-list-aws lambda-dynamodb-sam solution

Globals:
  Function:
    Timeout: 30

Parameters:
  EnvironmentType:
    Type: String
    AllowedValues:
      - 'local'
      - 'dev'
      - 'stg'
      - 'prod'

Conditions:
  deployDynamo:
    #!Not [!Or [!Equals [!Ref EnvironmentType, local], !Equals [!Ref EnvironmentType, dev]]]
    !Not [!Equals [!Ref EnvironmentType, local]]

Resources:
  todoListFcnList:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: todos/
      Handler: list.list
      Runtime: python3.8
      Policies:
      - AmazonDynamoDBReadOnlyAccess
      Environment:
        Variables:
          DYNAMODB_TABLE: !Ref TodoDynamoDbTable
      Events:
        list:
          Type: Api
          Properties:
            Path: /todos/
            Method: get
  todoListFcnGet:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: todos/
      Handler: get.get
      Runtime: python3.8
      Policies:
      - AmazonDynamoDBReadOnlyAccess
      Environment:
        Variables:
          DYNAMODB_TABLE: !Ref TodoDynamoDbTable
      Events:
        get:
          Type: Api
          Properties:
            Path: /todos/{id}
            Method: get
  todoListFcnTranslate:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: todos/
      Handler: translate.translate
      Runtime: python3.8
      Policies:
      - AmazonDynamoDBReadOnlyAccess
      - TranslateReadOnly
      Environment:
        Variables:
          DYNAMODB_TABLE: !Ref TodoDynamoDbTable
      Events:
        translate:
          Type: Api
          Properties:
            Path: /todos/{id}/{target_language}
            Method: get
  todoListFcnCreate:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: todos/
      Handler: create.create
      Runtime: python3.8
      Policies:
      - AmazonDynamoDBFullAccess
      Environment:
        Variables:
          DYNAMODB_TABLE: !Ref TodoDynamoDbTable
      Events:
        create:
          Type: Api
          Properties:
            Path: /todos/
            Method: post
  todoListFcnCreateTable:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: todos/
      Handler: createTable.createTable
      Runtime: python3.8
      Policies:
      - AmazonDynamoDBFullAccess
      Environment:
        Variables:
          DYNAMODB_TABLE: !Ref TodoDynamoDbTable
      Events:
        create:
          Type: Api
          Properties:
            Path: /todos/createTable/
            Method: get
  todoListFcnUpdate:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: todos/
      Handler: update.update
      Runtime: python3.8
      Policies:
      - AmazonDynamoDBFullAccess
      Environment:
        Variables:
          DYNAMODB_TABLE: !Ref TodoDynamoDbTable
      Events:
        update:
          Type: Api
          Properties:
            Path: /todos/{id}
            Method: put
  todoListFcnDelete:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: todos/
      Handler: delete.delete
      Runtime: python3.8
      Policies:
      - AmazonDynamoDBFullAccess
      Environment:
        Variables:
          DYNAMODB_TABLE: !Ref TodoDynamoDbTable
      Events:
        delete:
          Type: Api
          Properties:
            Path: /todos/{id}
            Method: delete

  TodoDynamoDbTable:
    Condition: deployDynamo
    Type: AWS::DynamoDB::Table
    DeletionPolicy: Retain
    Properties:
      # TableName: !Sub "todoTable-${EnvironmentType}"
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
      KeySchema:
        - AttributeName: id
          KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1


Outputs:
  todoListResourceApiId:
    Description: "API ID"
    Value: !Sub "${ServerlessRestApi}"
  todoListResourceApiUrl:
    Description: "API Gateway endpoint URL for Prod stage for todo-list-aws function"
    # Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/todos"
  todoListResourceFcnList:
    Description: "List Lambda Function ARN"
    Value: !GetAtt todoListFcnList.Arn
  todoListResourceFcnGet:
    Description: "Get Lambda Function ARN"
    Value: !GetAtt todoListFcnGet.Arn
  todoListResourceFcnTranslate:
    Description: "Translate Lambda Function ARN"
    Value: !GetAtt todoListFcnTranslate.Arn
  todoListResourceFcnCreate:
    Description: "Create Lambda Function ARN"
    Value: !GetAtt todoListFcnCreate.Arn
  todoListResourceFcnUpdate:
    Description: "Update Lambda Function ARN"
    Value: !GetAtt todoListFcnUpdate.Arn
  todoListResourceFcnDelete:
    Description: "Delete Lambda Function ARN"
    Value: !GetAtt todoListFcnDelete.Arn

